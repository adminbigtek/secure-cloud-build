steps:

# build
- id: "build"
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image', '.']
  waitFor: ['-']

#Run a vulnerability scan at _SECURITY level
- id: scan
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    (gcloud artifacts docker images scan     us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image     --location us     --format="value(response.scan)") > /workspace/scan_id.txt

#Analyze the result of the scan
- id: severity check
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
      gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt)       --format="value(vulnerability.effectiveSeverity)" | if grep -Fxq CRITICAL;       then echo "Failed vulnerability check for CRITICAL level" && exit 1; else echo "No CRITICAL vulnerability found, congrats !" && exit 0; fi

#Retag
- id: "retag"
  name: 'gcr.io/cloud-builders/docker'
  args: ['tag',  'us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image', 'us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image:good']


#pushing to artifact registry
- id: "push"
  name: 'gcr.io/cloud-builders/docker'
  args: ['push',  'us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image:good']

images:
  - us-central1-docker.pkg.dev/qwiklabs-gcp-04-688e2c558dd0/artifact-scanning-repo/sample-image
